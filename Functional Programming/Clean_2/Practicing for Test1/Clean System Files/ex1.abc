.comp 920 00011101001
.start __ex1_Start
.depend "_SystemEnum" "20111221123336"
.depend "StdEnum" "20111221123336"
.depend "StdMisc" "20111221123336"
.depend "StdFunc" "20111221123336"
.depend "StdCharList" "20111221123336"
.depend "StdTuple" "20111221123336"
.depend "StdOrdList" "20111221123336"
.depend "StdList" "20111221123336"
.depend "StdClass" "20111221123336"
.depend "StdFile" "20111221123336"
.depend "StdString" "20111221123336"
.depend "_SystemArray" "20111221123336"
.depend "StdArray" "20111221123334"
.depend "StdChar" "20111221123336"
.depend "StdReal" "20111221123336"
.depend "StdInt" "20111221123336"
.depend "StdOverloaded" "20111221123336"
.depend "StdBool" "20111221123336"
.depend "StdEnv" "20111221123336"
.module m_ex1 "ex1" "20180322153716"
.endinfo
.implab _cycle_in_spine
.implab _type_error
.implab _hnf
.impdesc _ind
.implab _indirection _eaind
.impdesc e_system_dif
.implab e_system_nif e_system_eaif
.implab e_system_sif
.impdesc e_system_dAP
.implab e_system_nAP e_system_eaAP
.implab e_system_sAP
.impdesc _Nil
.impdesc _Cons
.impdesc _Conss
.implab n_Conss ea_Conss
.impdesc _Consts
.implab n_Consts ea_Consts
.impdesc _Conssts
.implab n_Conssts ea_Conssts
.impdesc _Tuple
.impdesc d_S.1
.implab n_S.1 ea_S.1
.impdesc d_S.2
.implab n_S.2 ea_S.2
.impdesc d_S.3
.implab n_S.3 ea_S.3
.impdesc d_S.4
.implab n_S.4 ea_S.4
.impdesc d_S.5
.implab n_S.5 ea_S.5
.impdesc d_S.6
.implab n_S.6 ea_S.6
.implab _driver
.implab e_StdInt_s+;6
.implab e_StdInt_s/;10
.implab e_StdInt_s==;16
.implab e_StdInt_srem;28
.implab e_StdBool_snot
.export __ex1_Start
.o 0 0
__ex1_Start
	build _ 0 n15
.d 1 0
	jmp _driver
.n 0 _
.o 1 0
n15
	push_node _cycle_in_spine 0
.d 0 0
	jsr ea15
.o 0 1 i
	fillI_b 0 0
	pop_b 1
.d 1 0
	rtn
.o 0 0
ea15
.o 0 0
s15
	pushI 123
.d 0 1 i
	jmp s14
.o 0 1 i
s14
	pushI 0
	push_b 1
	eqI
	notB
	jmp_false else.1
	pushI 10
	push_b 1
	divI
.d 0 1 i
	jsr s14
.o 0 1 i
	pushI 10
	push_b 2
	remI
	update_b 1 2
	updatepop_b 0 1
	addI
.d 0 1 i
	rtn
else.1
	pop_b 1
	pushI 0
.d 0 1 i
	rtn
